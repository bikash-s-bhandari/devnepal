[{"/home/bikash/Documents/projects/practice/nodejs/devnepal/client/src/index.js":"1","/home/bikash/Documents/projects/practice/nodejs/devnepal/client/src/App.js":"2","/home/bikash/Documents/projects/practice/nodejs/devnepal/client/src/reportWebVitals.js":"3","/home/bikash/Documents/projects/practice/nodejs/devnepal/client/src/Components/layout/Navbar.js":"4","/home/bikash/Documents/projects/practice/nodejs/devnepal/client/src/Components/layout/Home.js":"5","/home/bikash/Documents/projects/practice/nodejs/devnepal/client/src/Components/index.js":"6","/home/bikash/Documents/projects/practice/nodejs/devnepal/client/src/Components/auth/Login.js":"7","/home/bikash/Documents/projects/practice/nodejs/devnepal/client/src/Components/auth/Register.js":"8","/home/bikash/Documents/projects/practice/nodejs/devnepal/client/src/redux/store.js":"9","/home/bikash/Documents/projects/practice/nodejs/devnepal/client/src/redux/Reducers/index.js":"10","/home/bikash/Documents/projects/practice/nodejs/devnepal/client/src/redux/Reducers/authReducer.js":"11","/home/bikash/Documents/projects/practice/nodejs/devnepal/client/src/redux/Reducers/alertReducer.js":"12","/home/bikash/Documents/projects/practice/nodejs/devnepal/client/src/redux/types.js":"13","/home/bikash/Documents/projects/practice/nodejs/devnepal/client/src/redux/Actions/alertActions.js":"14","/home/bikash/Documents/projects/practice/nodejs/devnepal/client/src/Components/layout/Alert.js":"15","/home/bikash/Documents/projects/practice/nodejs/devnepal/client/src/redux/Actions/authActions.js":"16","/home/bikash/Documents/projects/practice/nodejs/devnepal/client/src/Helpers/Axios.js":"17","/home/bikash/Documents/projects/practice/nodejs/devnepal/client/src/Utils/checkAuthentication.js":"18"},{"size":478,"mtime":1611926385346,"results":"19","hashOfConfig":"20"},{"size":994,"mtime":1612244590601,"results":"21","hashOfConfig":"20"},{"size":362,"mtime":1611925676381,"results":"22","hashOfConfig":"20"},{"size":1403,"mtime":1612012859862,"results":"23","hashOfConfig":"20"},{"size":818,"mtime":1611928727366,"results":"24","hashOfConfig":"20"},{"size":258,"mtime":1611989594953,"results":"25","hashOfConfig":"20"},{"size":2568,"mtime":1612244353216,"results":"26","hashOfConfig":"20"},{"size":3286,"mtime":1612093216625,"results":"27","hashOfConfig":"20"},{"size":374,"mtime":1612177884914,"results":"28","hashOfConfig":"20"},{"size":207,"mtime":1611986305439,"results":"29","hashOfConfig":"20"},{"size":1159,"mtime":1612245391633,"results":"30","hashOfConfig":"20"},{"size":451,"mtime":1611990176271,"results":"31","hashOfConfig":"20"},{"size":374,"mtime":1612011812891,"results":"32","hashOfConfig":"20"},{"size":366,"mtime":1611990610888,"results":"33","hashOfConfig":"20"},{"size":509,"mtime":1611990245342,"results":"34","hashOfConfig":"20"},{"size":2292,"mtime":1612246102557,"results":"35","hashOfConfig":"20"},{"size":460,"mtime":1612244012958,"results":"36","hashOfConfig":"20"},{"size":841,"mtime":1612246114892,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1uo3d5m",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/bikash/Documents/projects/practice/nodejs/devnepal/client/src/index.js",[],["80","81"],"/home/bikash/Documents/projects/practice/nodejs/devnepal/client/src/App.js",[],"/home/bikash/Documents/projects/practice/nodejs/devnepal/client/src/reportWebVitals.js",[],"/home/bikash/Documents/projects/practice/nodejs/devnepal/client/src/Components/layout/Navbar.js",["82"],"import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport { logoutUser } from '../../redux/Actions/authActions'\n\nconst Navbar = ({ auth: { isAuthenticated, loading }, logoutUser }) => {\n\n    const authLinks = (\n        <ul>\n            <li>\n                <a onClick={logoutUser} href=\"#!\">\n                    <i className=\"fas fa-sign-out-alt\"></i>{' '}\n                    <span className=\"hide-sm\">Logout</span>\n                </a>\n            </li>\n\n\n        </ul>\n\n\n    )\n\n    const guestLinks = (\n        <ul>\n            <li>\n                <a href=\"\">Developers</a>\n\n            </li>\n            <li><Link to=\"/login\">Login</Link></li>\n            <li><Link to=\"/register\">Register</Link></li>\n\n        </ul>\n\n\n    )\n\n    return (\n        <nav className=\"navbar bg-dark\">\n            <h1>\n                <Link to=\"/\"><i className=\"fas fa-code\"></i> Dev Nepal</Link>\n            </h1>\n            {!loading && (<>\n                {isAuthenticated ? authLinks : guestLinks}\n            </>)}\n\n        </nav>\n    )\n}\nNavbar.propTypes = {\n    logoutUser: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired\n}\nconst mapStateToProps = (state) => ({\n    auth: state.auth\n\n});\n\nconst mapActionsToProps = {\n\n    logoutUser\n};\n\n\n\n\nexport default connect(mapStateToProps, mapActionsToProps)(Navbar)\n","/home/bikash/Documents/projects/practice/nodejs/devnepal/client/src/Components/layout/Home.js",[],"/home/bikash/Documents/projects/practice/nodejs/devnepal/client/src/Components/index.js",[],"/home/bikash/Documents/projects/practice/nodejs/devnepal/client/src/Components/auth/Login.js",["83","84"],"import React, { useState } from 'react'\nimport { Link, Redirect } from 'react-router-dom'\nimport { setAlert } from '../../redux/Actions/alertActions'\nimport { connect } from 'react-redux'\nimport { loginUser } from '../../redux/Actions/authActions'\nimport PropTypes from 'prop-types'\n\nconst Login = (props) => {\n    const { setAlert, loginUser, isAuthenticated } = props;\n    console.log('auth', isAuthenticated)\n    const [values, setValues] = useState({\n        email: '',\n        password: ''\n    });\n\n    const handleChange = (event) => {\n        setValues(values => ({\n            ...values,\n            [event.target.name]: event.target.value,\n        }));\n\n\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        if (values.email == '') {\n            setAlert('Please enter email! ', 'danger')\n        } else if (values.password == '') {\n\n        } else {\n            loginUser(values);\n\n        }\n\n    }\n\n    //redirect of login\n    if (isAuthenticated) {\n        return < Redirect to=\"/dashboard\" />\n    }\n    return (\n        <>\n\n            <h1 className=\"large text-primary\">Sign In</h1>\n            <p className=\"lead\"><i className=\"fas fa-user\"></i> Sign into Your Account</p>\n            <form className=\"form\" onSubmit={handleSubmit}>\n                <div className=\"form-group\">\n                    <input\n                        type=\"email\"\n                        placeholder=\"Email Address\"\n                        name=\"email\"\n                        value={values.email}\n                        onChange={handleChange}\n\n\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <input\n                        type=\"password\"\n                        placeholder=\"Password\"\n                        name=\"password\"\n                        value={values.password}\n                        onChange={handleChange}\n\n                    />\n                </div>\n                <input type=\"submit\" className=\"btn btn-primary\" value=\"Login\" />\n            </form>\n            <p className=\"my-1\">\n                Don't have an account? <Link to=\"/register\">Sign Up</Link>\n            </p>\n\n        </>\n    )\n}\n\nLogin.propTypes = {\n    setAlert: PropTypes.func.isRequired,\n    loginUser: PropTypes.func.isRequired,\n    isAuthenticated: PropTypes.bool\n}\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated\n\n});\nconst mapActionsToProps = {\n    setAlert,\n    loginUser\n};\n\n\n\nexport default connect(mapStateToProps, mapActionsToProps)(Login)\n","/home/bikash/Documents/projects/practice/nodejs/devnepal/client/src/Components/auth/Register.js",["85"],"import React, { useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { setAlert } from '../../redux/Actions/alertActions'\nimport { registerUser } from '../../redux/Actions/authActions'\nimport PropTypes from 'prop-types'\n\n\nconst Register = (props) => {\n\n    const { setAlert, registerUser } = props;\n    const [values, setValues] = useState({\n        name: '',\n        email: '',\n        password: '',\n        confirmPassword: ''\n    });\n\n    const handleChange = (event) => {\n        setValues(values => ({\n            ...values,\n            [event.target.name]: event.target.value,\n        }));\n\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        if (values.password !== values.confirmPassword) {\n            setAlert('Confirm password did not match! ', 'danger')\n        } else {\n            registerUser(values);\n        }\n\n\n    }\n\n\n    return (\n        <>\n            <h1 className=\"large text-primary\">Sign Up</h1>\n            <p className=\"lead\"><i className=\"fas fa-user\"></i> Create Your Account</p>\n            <form className=\"form\" onSubmit={handleSubmit}>\n                <div className=\"form-group\">\n                    <input\n                        type=\"text\"\n                        placeholder=\"Name\"\n                        name=\"name\"\n                        value={values.name}\n                        onChange={handleChange}\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <input\n                        type=\"email\"\n                        placeholder=\"Email Address\"\n                        name=\"email\"\n                        value={values.email}\n                        onChange={handleChange}\n                    />\n                    <small className=\"form-text\"\n                    >This site uses Gravatar so if you want a profile image, use a\n              Gravatar email</small\n                    >\n                </div>\n                <div className=\"form-group\">\n                    <input\n                        type=\"password\"\n                        placeholder=\"Password\"\n                        name=\"password\"\n                        minLength=\"6\"\n                        value={values.password}\n                        onChange={handleChange}\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <input\n                        type=\"password\"\n                        placeholder=\"Confirm Password\"\n                        name=\"confirmPassword\"\n                        value={values.confirmPassword}\n                        onChange={handleChange}\n                    />\n                </div>\n                <input type=\"submit\" className=\"btn btn-primary\" value=\"Register\" />\n            </form>\n            <p className=\"my-1\">\n                Already have an account? <Link to=\"/login\">Sign In</Link>\n            </p>\n        </>\n    )\n}\n\n{/* const mapStateToProps = (state) => ({\n\n}); */}\n\nconst mapActionsToProps = {\n    setAlert,\n    registerUser\n};\n\nRegister.propTypes = {\n    setAlert: PropTypes.func.isRequired,\n    registerUser: PropTypes.func.isRequired\n}\n\nexport default connect(null, mapActionsToProps)(Register)\n","/home/bikash/Documents/projects/practice/nodejs/devnepal/client/src/redux/store.js",[],"/home/bikash/Documents/projects/practice/nodejs/devnepal/client/src/redux/Reducers/index.js",[],"/home/bikash/Documents/projects/practice/nodejs/devnepal/client/src/redux/Reducers/authReducer.js",["86"],"import { REGISTER_SUCCESS, REGISTER_FAIL, SET_USER, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT_USER } from '../types'\nimport Cookies from 'universal-cookie';\nconst cookies = new Cookies();\nconst initialState = {\n    isAuthenticated: false,\n    loading: false,\n    token: cookies.get('token'),\n    user: null\n}\n\n\nexport default function (state = initialState, action) {\n    const { type, payload } = action\n    switch (type) {\n        case REGISTER_SUCCESS:\n        case LOGIN_SUCCESS:\n            return {\n                ...state,\n                ...payload,\n                isAuthenticated: true,\n                loading: false\n            };\n        case REGISTER_FAIL:\n        case AUTH_ERROR:\n        case LOGIN_FAIL:\n        case LOGOUT_USER:\n            return {\n                ...state,\n                token: null,\n                isAuthenticated: false,\n                loading: false\n            };\n\n        case SET_USER:\n            return {\n                ...state,\n                isAuthenticated: true,\n                loading: false,\n                user: payload\n\n            };\n\n        default:\n            return state;\n\n\n\n\n    }\n\n\n}","/home/bikash/Documents/projects/practice/nodejs/devnepal/client/src/redux/Reducers/alertReducer.js",["87"],"import { SET_ALERT, REMOVE_ALERT } from '../types'\nconst initialState = [];\n\n\nexport default function (state = initialState, action) {\n    const { type, payload } = action;\n    switch (type) {\n        case SET_ALERT:\n            return [\n                ...state,\n                payload\n            ];\n        case REMOVE_ALERT:\n            return state.filter(alert => alert.id !== payload);\n\n        default:\n            return state;\n\n\n\n\n    }\n\n\n}","/home/bikash/Documents/projects/practice/nodejs/devnepal/client/src/redux/types.js",[],"/home/bikash/Documents/projects/practice/nodejs/devnepal/client/src/redux/Actions/alertActions.js",[],"/home/bikash/Documents/projects/practice/nodejs/devnepal/client/src/Components/layout/Alert.js",[],"/home/bikash/Documents/projects/practice/nodejs/devnepal/client/src/redux/Actions/authActions.js",[],"/home/bikash/Documents/projects/practice/nodejs/devnepal/client/src/Helpers/Axios.js",[],"/home/bikash/Documents/projects/practice/nodejs/devnepal/client/src/Utils/checkAuthentication.js",[],{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","severity":1,"message":"93","line":27,"column":17,"nodeType":"94","endLine":27,"endColumn":28},{"ruleId":"95","severity":1,"message":"96","line":27,"column":26,"nodeType":"97","messageId":"98","endLine":27,"endColumn":28},{"ruleId":"95","severity":1,"message":"96","line":29,"column":36,"nodeType":"97","messageId":"98","endLine":29,"endColumn":38},{"ruleId":"99","severity":1,"message":"100","line":94,"column":1,"nodeType":"101","messageId":"102","endLine":96,"endColumn":8},{"ruleId":"103","severity":1,"message":"104","line":12,"column":1,"nodeType":"105","endLine":52,"endColumn":2},{"ruleId":"103","severity":1,"message":"104","line":5,"column":1,"nodeType":"105","endLine":25,"endColumn":2},"no-native-reassign",["106"],"no-negated-in-lhs",["107"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]